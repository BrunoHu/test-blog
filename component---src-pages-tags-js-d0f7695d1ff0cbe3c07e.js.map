{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["Tags","posts","data","allMarkdownRemark","edges","tagMap","Map","node","frontmatter","tags","tag","has","set","get","tagPair","Array","from","sort","left","right","title","class","map","count","to","className","pageQuery"],"mappings":"+SA8CeA,UAvCF,SAAC,GAAc,IACpBC,EADmB,EAAXC,KACKC,kBAAkBC,MACjCC,EAAS,IAAIC,IAGjB,EAAmBL,EAAnB,wDAA0B,CAAC,IAAD,oFACxB,EADwB,EACDM,KAAKC,YAAYC,KAAxC,wDAA8C,CAAC,IAAD,oFAAnCC,EAAmC,EACxCL,EAAOM,IAAID,GACbL,EAAOO,IAAIF,EAAKL,EAAOQ,IAAIH,GAAO,GAElCL,EAAOO,IAAIF,EAAK,IAItB,IAAII,EAAUC,MAAMC,KAAKX,GAEzB,OADAS,EAAQG,MAAK,SAACC,EAAMC,GAAP,OAAiBA,EAAM,GAAKD,EAAK,MAE5C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,MAAM,SAEX,wBAAIC,MAAM,6BAAV,YACA,uBAAGA,MAAM,sBAAT,0CACA,6BACA,yBAAKA,MAAM,yCACRP,EAAQQ,KAAI,YAAmB,IAAjBZ,EAAgB,KAAXa,EAAW,KAC7B,OACE,yBAAKF,MAAM,WACT,yBAAKA,MAAM,8BACT,kBAAC,OAAD,CAAMG,GAAI,OAASd,EAAKe,UAAU,OAAOf,GACzC,0BAAMW,MAAM,eAAeE,WAYpC,IAAMG,EAAS","file":"component---src-pages-tags-js-d0f7695d1ff0cbe3c07e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport \"../mystyles.scss\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/Layout\"\n\nconst Tags = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n  var tagMap = new Map()\n\n\n  for (const post of posts) {\n    for (const tag of post.node.frontmatter.tags) {\n      if (tagMap.has(tag)) {\n        tagMap.set(tag, tagMap.get(tag) + 1)\n      } else {\n        tagMap.set(tag, 1)\n      }\n    }\n  }\n  var tagPair = Array.from(tagMap)\n  tagPair.sort((left, right) => right[1] - left[1])\n  return (\n    <Layout>\n      <SEO title=\"Tags\" />\n    \n      <h1 class=\"title has-text-black is-1\">All Tags</h1>\n      <p class=\"subtitle is-spaced\">Click the tag to read related articles</p>\n      <hr />\n      <div class=\"field is-grouped is-grouped-multiline\">\n        {tagPair.map(([tag, count]) => {\n          return (\n            <div class=\"control\">\n              <div class=\"tags has-addons are-medium\">\n                <Link to={\"tag/\" + tag} className=\"tag\">{tag}</Link>\n                <span class=\"tag is-info\">{count}</span>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}