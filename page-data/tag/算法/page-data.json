{"componentChunkName":"component---src-templates-tag-posts-js","path":"/tag/算法","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Bates Hu"}},"allMarkdownRemark":{"edges":[{"node":{"id":"98184600-549c-51a5-9ded-f115a54d3687","excerpt":"起源 最近无聊在看书的时候看到了博弈树，以及最大最小剪枝算法(alpha-beta pruning method)。脑子里想着怎么实践一下来加深对这个算法的理解，然后想到了以前刚好试过2048的ai，但是失败了，而这个算法的适用场景刚好合适，可以试试，然后就开始coding…","fields":{"slug":"/2048-ai小试/"},"frontmatter":{"date":"July 26, 2016","title":"2048 ai小试","description":null,"tags":["算法","ai","博弈"]}}},{"node":{"id":"4ee34868-bc30-5071-bb59-438a5e9c0361","excerpt":"This is a personal answers of leetcode problem. My aim is to find the fast way to solve the problems by python. In some cases, the time or…","fields":{"slug":"/leetcode记/"},"frontmatter":{"date":"February 29, 2016","title":"leetcode记（持续更新中）","description":null,"tags":["算法","python"]}}},{"node":{"id":"5c147abc-ebb3-5e61-a32e-445f79449934","excerpt":"前言 原来一直有段时间我很喜欢玩数独，尤其是沉迷于如何不用试错法来搞定一个复杂的数度问题，但是我总是被教做人。现在哥会编程了，可以用计算机教数独做人了，想想就很开心呢。 这篇文章是在看了Peter Norvig…","fields":{"slug":"/数独的高效深度搜索解法/"},"frontmatter":{"date":"February 14, 2016","title":"数独的高效深度搜索解法","description":null,"tags":["math","算法","python","数独"]}}},{"node":{"id":"d6b3b243-b5a9-5dd4-a4ee-fddea8bf5c6d","excerpt":"…","fields":{"slug":"/让我们来研究一下神奇的连连看/"},"frontmatter":{"date":"September 26, 2015","title":"让我们来研究一下神奇的连连看","description":null,"tags":["算法","数据结构","游戏"]}}},{"node":{"id":"aa148d24-e24b-523d-864f-9485ba5ba418","excerpt":"最近准备找些东西练练手，就想着实现一下一些数据处理方面的算法，一方面是可以更深刻的理解算法，二也能锻炼一下编程水平。这一次编写kmeans算法的时候就出现了很多很神奇的bug，有一些还是python这种弱类型语言所特有的，很这么人也很有意思。 K-means算法介绍 K…","fields":{"slug":"/用python实现kmeans算法/"},"frontmatter":{"date":"September 20, 2015","title":"用python实现kmeans算法","description":null,"tags":["python","数据挖掘","聚类","算法"]}}}]}},"pageContext":{"targetTag":"算法"}}}