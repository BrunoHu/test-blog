{"version":3,"sources":["webpack:///./src/pages/archive.js"],"names":["Archive","data","posts","allMarkdownRemark","edges","yearPosts","Map","post","console","log","year","node","frontmatter","date","has","set","get","push","convertPosts","title","to","fields","slug","class","totalCount","Array","from","map","postsOfYear","pageQuery"],"mappings":"qSAqDeA,UA9CC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACXC,EAAQD,EAAKE,kBAAkBC,MAEjCC,EAAY,IAAIC,IAEpB,EAAiBJ,EAAjB,wDAAwB,CAAC,IAAD,oFAAfK,EAAe,EACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EAAKI,KAAKC,YAAYC,KAC9BR,EAAUS,IAAIJ,IACjBL,EAAUU,IAAIL,EAAM,IAEtBL,EAAUW,IAAIN,GAAMO,KAAKV,GAG3BC,QAAQC,IAAIJ,GAEZ,IAAMa,EAAe,SAAAX,GACLA,EAAKI,KAAKC,YAAYO,MACpC,OACE,4BACE,kBAAC,OAAD,CAAMC,GAAI,OAASb,EAAKI,KAAKU,OAAOC,MAAOf,EAAKI,KAAKC,YAAYO,SAcvE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,MAAM,YAEX,wBAAII,MAAM,6BAAV,WACA,uBAAGA,MAAM,YAAYtB,EAAKE,kBAAkBqB,WAAa,UACzD,6BACA,yBAAKD,MAAM,WAAWE,MAAMC,KAAKrB,GAAWsB,KAhBvB,SAAC,GAAyB,IAAxBjB,EAAuB,KAAjBkB,EAAiB,KAChD,OACE,yBAAKL,MAAM,OACT,wBAAIA,MAAM,SAASb,GACnB,4BAAKkB,EAAYD,IAAIT,WAmBtB,IAAMW,EAAS","file":"component---src-pages-archive-js-965dcfbe1f6229f976f3.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport \"../mystyles.scss\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/Layout\"\n\nconst Archive = ({ data }) => {\n  const posts = data.allMarkdownRemark.edges\n\n  var yearPosts = new Map()\n\n  for (var post of posts) {\n    console.log(post)\n    const year = post.node.frontmatter.date\n    if (!yearPosts.has(year)) {\n      yearPosts.set(year, [])\n    }\n    yearPosts.get(year).push(post)\n  }\n\n  console.log(yearPosts)\n\n  const convertPosts = post => {\n    const title = post.node.frontmatter.title\n    return (\n      <li>\n        <Link to={\"blog\" + post.node.fields.slug}>{post.node.frontmatter.title}</Link>\n      </li>\n    )\n  }\n\n  const convertYearPosts = ([year, postsOfYear]) => {\n    return (\n      <div class=\"box\">\n        <h2 class=\"title\">{year}</h2>\n        <ul>{postsOfYear.map(convertPosts)}</ul>\n      </div>\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title=\"Archive\" />\n\n      <h1 class=\"title has-text-black is-1\">Archive</h1>\n      <p class=\"subtitle\">{data.allMarkdownRemark.totalCount + \" posts\"}</p>\n      <hr />\n      <div class=\"content\">{Array.from(yearPosts).map(convertYearPosts)}</div>\n    </Layout>\n  )\n}\n\nexport default Archive\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: {order: DESC, fields: frontmatter___date}) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n      totalCount\n    }\n  }\n`\n"],"sourceRoot":""}